# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from protos import service_pb2 as protos_dot_service__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in protos/service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CO2AnalyticsServiceStub(object):
    """The CO2 Analytics AI Service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadCSV = channel.unary_unary(
                '/co2analytics.CO2AnalyticsService/UploadCSV',
                request_serializer=protos_dot_service__pb2.UploadCSVRequest.SerializeToString,
                response_deserializer=protos_dot_service__pb2.UploadCSVResponse.FromString,
                _registered_method=True)
        self.GetCSV = channel.unary_unary(
                '/co2analytics.CO2AnalyticsService/GetCSV',
                request_serializer=protos_dot_service__pb2.GetCSVRequest.SerializeToString,
                response_deserializer=protos_dot_service__pb2.GetCSVResponse.FromString,
                _registered_method=True)
        self.UpdateCSV = channel.unary_unary(
                '/co2analytics.CO2AnalyticsService/UpdateCSV',
                request_serializer=protos_dot_service__pb2.GlobalInput.SerializeToString,
                response_deserializer=protos_dot_service__pb2.UpdateCSVResponse.FromString,
                _registered_method=True)
        self.GetInsightsPlot = channel.unary_unary(
                '/co2analytics.CO2AnalyticsService/GetInsightsPlot',
                request_serializer=protos_dot_service__pb2.GetInsightsRequest.SerializeToString,
                response_deserializer=protos_dot_service__pb2.GetInsightsResponse.FromString,
                _registered_method=True)
        self.GetCaptureEfficiencyData = channel.unary_unary(
                '/co2analytics.CO2AnalyticsService/GetCaptureEfficiencyData',
                request_serializer=protos_dot_service__pb2.GetCaptureEfficiencyDataRequest.SerializeToString,
                response_deserializer=protos_dot_service__pb2.GetCaptureEfficiencyDataResponse.FromString,
                _registered_method=True)
        self.GetStorageEfficiencyData = channel.unary_unary(
                '/co2analytics.CO2AnalyticsService/GetStorageEfficiencyData',
                request_serializer=protos_dot_service__pb2.GetStorageEfficiencyDataRequest.SerializeToString,
                response_deserializer=protos_dot_service__pb2.GetStorageEfficiencyDataResponse.FromString,
                _registered_method=True)


class CO2AnalyticsServiceServicer(object):
    """The CO2 Analytics AI Service definition
    """

    def UploadCSV(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCSV(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCSV(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInsightsPlot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCaptureEfficiencyData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStorageEfficiencyData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CO2AnalyticsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadCSV': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadCSV,
                    request_deserializer=protos_dot_service__pb2.UploadCSVRequest.FromString,
                    response_serializer=protos_dot_service__pb2.UploadCSVResponse.SerializeToString,
            ),
            'GetCSV': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCSV,
                    request_deserializer=protos_dot_service__pb2.GetCSVRequest.FromString,
                    response_serializer=protos_dot_service__pb2.GetCSVResponse.SerializeToString,
            ),
            'UpdateCSV': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCSV,
                    request_deserializer=protos_dot_service__pb2.GlobalInput.FromString,
                    response_serializer=protos_dot_service__pb2.UpdateCSVResponse.SerializeToString,
            ),
            'GetInsightsPlot': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInsightsPlot,
                    request_deserializer=protos_dot_service__pb2.GetInsightsRequest.FromString,
                    response_serializer=protos_dot_service__pb2.GetInsightsResponse.SerializeToString,
            ),
            'GetCaptureEfficiencyData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCaptureEfficiencyData,
                    request_deserializer=protos_dot_service__pb2.GetCaptureEfficiencyDataRequest.FromString,
                    response_serializer=protos_dot_service__pb2.GetCaptureEfficiencyDataResponse.SerializeToString,
            ),
            'GetStorageEfficiencyData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStorageEfficiencyData,
                    request_deserializer=protos_dot_service__pb2.GetStorageEfficiencyDataRequest.FromString,
                    response_serializer=protos_dot_service__pb2.GetStorageEfficiencyDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'co2analytics.CO2AnalyticsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('co2analytics.CO2AnalyticsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CO2AnalyticsService(object):
    """The CO2 Analytics AI Service definition
    """

    @staticmethod
    def UploadCSV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/co2analytics.CO2AnalyticsService/UploadCSV',
            protos_dot_service__pb2.UploadCSVRequest.SerializeToString,
            protos_dot_service__pb2.UploadCSVResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCSV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/co2analytics.CO2AnalyticsService/GetCSV',
            protos_dot_service__pb2.GetCSVRequest.SerializeToString,
            protos_dot_service__pb2.GetCSVResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCSV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/co2analytics.CO2AnalyticsService/UpdateCSV',
            protos_dot_service__pb2.GlobalInput.SerializeToString,
            protos_dot_service__pb2.UpdateCSVResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInsightsPlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/co2analytics.CO2AnalyticsService/GetInsightsPlot',
            protos_dot_service__pb2.GetInsightsRequest.SerializeToString,
            protos_dot_service__pb2.GetInsightsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCaptureEfficiencyData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/co2analytics.CO2AnalyticsService/GetCaptureEfficiencyData',
            protos_dot_service__pb2.GetCaptureEfficiencyDataRequest.SerializeToString,
            protos_dot_service__pb2.GetCaptureEfficiencyDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStorageEfficiencyData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/co2analytics.CO2AnalyticsService/GetStorageEfficiencyData',
            protos_dot_service__pb2.GetStorageEfficiencyDataRequest.SerializeToString,
            protos_dot_service__pb2.GetStorageEfficiencyDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
