syntax = "proto3";

package co2analytics;

message UploadCSVRequest {
  bytes file_content = 1;
}

message UploadCSVResponse {
  string status = 1;
  string message = 2;
}

message Empty {}

message GetCSVRequest {
  string csv_name = 1;
}

message CSVRecord {
  map<string, string> fields = 1;
}

message GetCSVResponse {
  repeated CSVRecord records = 1;
}


message GlobalInput {
  string date = 1;
  string facility_id = 2;
  string facility_name = 3;
  string country = 4;
  string region = 5;
  string storage_site_type = 6;
  double co2_emitted_tonnes = 7;
  double co2_captured_tonnes = 8;
  double co2_stored_tonnes = 9;
  double capture_efficiency_percent = 10;
  double storage_integrity_percent = 11;
  bool anomaly_flag = 12;
}

message UpdateCSVResponse {
  string status = 1;
  string message = 2;
  bool anomaly_flag = 3;
}

message GetInsightsRequest {
  string facility_name = 1;
}

message GetCaptureEfficiencyDataRequest {
  string facility_name = 1;
}

message GetStorageEfficiencyDataRequest {
  string facility_name = 1;
}

message ChartData {
  repeated string labels = 1;  //for x-axis CO2 emitted
  repeated  double predicted_values = 2; // regression line y-axis
  repeated  double actual_values = 3;  // actual values for y-axis
}

message CaptureEfficiencyData {
  repeated string labels = 1;
  repeated  double predicted_values = 2;
  repeated  double actual_values = 3;
  repeated bool inefficiency_flag = 4;
}

message StorageEfficiencyData {
  repeated string labels = 1;
  repeated  double actual_stored_co2 = 2;
  repeated  double predicted_stored_co2 = 3;
  repeated bool storage_issue_detected = 4;

}

message GetInsightsResponse {
  ChartData chart_data = 1;
}

message GetCaptureEfficiencyDataResponse {
  CaptureEfficiencyData capture_data = 1;
}

message GetStorageEfficiencyDataResponse {
  StorageEfficiencyData storage_data = 1;
}

// The CO2 Analytics AI Service definition
service CO2AnalyticsService {
  rpc UploadCSV(UploadCSVRequest) returns (UploadCSVResponse);

  rpc GetCSV(GetCSVRequest) returns (GetCSVResponse);

  rpc UpdateCSV(GlobalInput) returns (UpdateCSVResponse);

  rpc GetInsightsPlot(GetInsightsRequest) returns (GetInsightsResponse);

  rpc GetCaptureEfficiencyData(GetCaptureEfficiencyDataRequest) returns (GetCaptureEfficiencyDataResponse);

  rpc GetStorageEfficiencyData(GetStorageEfficiencyDataRequest) returns (GetStorageEfficiencyDataResponse);
}
